ds=brown_ext_abtree_lf;rm data_jax.csv;cols="%12s %12s %12s %12s\n"; printf "$cols" alg nthreads tput max_res; for n in 24 48 72 96 192 240; do for alg in token4 debra_df debra nbrplus nbr ibr_rcu qsbr 2geibr ibr_hp he wfe none; do avgtput=0 ; for ((trial=0;trial<5;++trial)); do sfname=step_${alg}_${n}_${trial}.txt; [[ $n -eq 240 ]] && LD_PRELOAD=../../lib/libjemalloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i 50 -d 50 -rq 0 -rqsize 1 -k 20000000 -nrq 0 -t 5000 > ${sfname} || LD_PRELOAD=../../lib/libjemalloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt numactl --interleave=all ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i 50 -d 50 -rq 0 -rqsize 1 -k 20000000 -nrq 0 -t 5000 -pin 0-23,24-47,48-71,72-95,96-119,120-143,144-167,168-191 > ${sfname} ; tput=`cat ${sfname} | grep "total throughput" | cut -d ":" -f2 | tr -d " "  `; max_resmem=`cat timetemp.txt | grep memory | tail -1 | cut -d":" -f2` ; printf "%12s %12d %12d %12d\n" "$alg" "$n" "$tput" "$max_resmem" | tee templine.txt; cat templine.txt | paste -sd " " >> data_jax.csv; done; done ; echo "-------------------";done;






# for orig vs df

ds=brown_ext_abtree_lf;rm data_jax.csv;cols="%12s %12s %12s %12s\n"; printf "$cols" alg nthreads tput max_res; for n in 24 48 72 96 192 240; do for alg in debra debra_df nbrplus nbrplus_df nbr nbr_df ibr_rcu ibr_rcu_df qsbr qsbr_df 2geibr 2geibr_df ibr_hp ibr_hp_df he he_df wfe wfe_df none; do avgtput=0 ; for ((trial=0;trial<5;++trial)); do sfname=step_${alg}_${n}_${trial}.txt; [[ $n -eq 240 ]] && LD_PRELOAD=../../lib/libjemalloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i 50 -d 50 -rq 0 -rqsize 1 -k 20000000 -nrq 0 -t 5000 > ${sfname} || LD_PRELOAD=../../lib/libjemalloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt numactl --interleave=all ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i 50 -d 50 -rq 0 -rqsize 1 -k 20000000 -nrq 0 -t 5000 -pin 0-23,24-47,48-71,72-95,96-119,120-143,144-167,168-191 > ${sfname} ; tput=`cat ${sfname} | grep "total throughput" | cut -d ":" -f2 | tr -d " "  `; max_resmem=`cat timetemp.txt | grep memory | tail -1 | cut -d":" -f2` ; printf "%12s %12d %12d %12d\n" "$alg" "$n" "$tput" "$max_resmem" | tee templine.txt; cat templine.txt | paste -sd " " >> data_jax.csv; done; done ; echo "-------------------";done;



# for pop
ac=mi;size=2000000;insdel=50;ds=guerraoui_ext_bst_ticket;rm data_jax.csv;cols="%12s %12s %12s %12s %12s %12s\n"; printf "$cols" alg nthreads tput sigallevs maxbagsz max_res; for n in 144 168 192; do for alg in rcu_popplus nbrplus; do avgtput=0 ; for ((trial=0;trial<3;++trial)); do sfname=step_${alg}_${n}_${trial}.txt; [[ $n -gt 192 ]] && LD_PRELOAD=../../lib/lib${ac}malloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i ${insdel} -d ${insdel} -rq 0 -rqsize 1 -k ${size} -nrq 0 -t 5000 > ${sfname} || LD_PRELOAD=../../lib/lib${ac}malloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt numactl --interleave=all ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i ${insdel} -d ${insdel} -rq 0 -rqsize 1 -k ${size} -nrq 0 -t 5000 -pin 0-23,96-119,24-47,120-143,48-71,144-167,72-95,168-191 > ${sfname} ; tput=`cat ${sfname} | grep "total throughput" | cut -d ":" -f2 | tr -d " "  `; max_resmem=`cat timetemp.txt | grep memory | tail -1 | cut -d":" -f2`; sigall=`cat ${sfname} | grep "sum_signalall_total" | cut -d "=" -f2 | tail -1`; maxbagsz=`cat ${sfname} | grep "max_reclamation_event_size_total" | cut -d "=" -f2 | tail -1` ; printf "%12s %12d %12d %12d %12d %12d\n" "$alg" "$n" "$tput" "$sigall" "$maxbagsz" "$max_resmem" | tee templine.txt; cat templine.txt | paste -sd " " >> data_jax.csv; done; done ; echo "-------------------";done;


# for single pop
ac=je;rec=rcu_popplus;th=192; sz=2000000;LD_PRELOAD=../../lib/lib${ac}malloc.so time ./ubench_guerraoui_ext_bst_ticket.alloc_new.reclaim_${rec}.pool_none.out -nwork ${th} -nprefill ${th} -i 50 -d 50 -rq 0 -rqsize 1 -k ${sz} -nrq 0 -t 2000



# POP NASUS

ac=mi;size=2000000;insdel=50;ds=guerraoui_ext_bst_ticket;dur=3000;rm data_jax.csv;cols="%15s %12s %12s %12s %12s %12s %12s\n"; printf "$cols" alg nthreads tput sigallevs maxbagsz max_unreclaimed max_res; for n in 64 128 254 300; do for alg in none ibr_rcu nbr nbrplus nbr_pophe nbr_popplushe he; do avgtput=0 ; for ((trial=0;trial<2;++trial)); do sfname=step_${alg}_${n}_${trial}.txt; [[ $n -gt 256 ]] && LD_PRELOAD=../../lib/lib${ac}malloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i ${insdel} -d ${insdel} -rq 0 -rqsize 1 -k ${size} -nrq 0 -t ${dur} > ${sfname} || LD_PRELOAD=../../lib/lib${ac}malloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt numactl --interleave=all ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i ${insdel} -d ${insdel} -rq 0 -rqsize 1 -k ${size} -nrq 0 -t ${dur} -pin 0-63,128-191,64-127,192-255 > ${sfname} ; tput=`cat ${sfname} | grep "total throughput" | cut -d ":" -f2 | tr -d " "  `; max_resmem=`cat timetemp.txt | grep memory | tail -1 | cut -d":" -f2`; sigall=`cat ${sfname} | grep "sum_signalall_total" | cut -d "=" -f2 | tail -1`; maxbagsz=`cat ${sfname} | grep "max_reclamation_event_size_total" | cut -d "=" -f2 | tail -1`; maxunreclaimed=`cat ${sfname} | grep "num_unreclaimed" | cut -d "=" -f2 | tail -1` ; printf "%15s %12d %12d %12d %12d %12d %12d\n" "$alg" "$n" "$tput" "$sigall" "$maxbagsz" "$maxunreclaimed" "$max_resmem" | tee templine.txt; cat templine.txt | paste -sd " " >> data_jax.csv; done; done ; echo "-------------------";done;


# POP JAX

ac=mi;size=2000000;insdel=50;ds=guerraoui_ext_bst_ticket;dur=3000;rm data_jax.csv;cols="%15s %15s %12s %12s %12s %12s %12s\n"; printf "$cols" alg nthreads tput sigallevs maxbagsz num_unreclaimedmax_res; for n in 32 64 128 190 254 300; do for alg in he nbr_pophe nbr_popplushe 2geibr nbrplus; do avgtput=0 ; for ((trial=0;trial<2;++trial)); do sfname=step_${alg}_${n}_${trial}.txt; [[ $n -gt 192 ]] && LD_PRELOAD=../../lib/lib${ac}malloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i ${insdel} -d ${insdel} -rq 0 -rqsize 1 -k ${size} -nrq 0 -t ${dur} > ${sfname} || LD_PRELOAD=../../lib/lib${ac}malloc.so time -f "cmd:%C \nmemory:%M" -o timetemp.txt numactl --interleave=all ./ubench_${ds}.alloc_new.reclaim_${alg}.pool_none.out -nwork $n -nprefill $n -i ${insdel} -d ${insdel} -rq 0 -rqsize 1 -k ${size} -nrq 0 -t ${dur} -pin 0-23,96-119,24-47,120-143,48-71,144-167,72-95,168-191 > ${sfname} ; tput=`cat ${sfname} | grep "total throughput" | cut -d ":" -f2 | tr -d " "  `; max_resmem=`cat timetemp.txt | grep memory | tail -1 | cut -d":" -f2`; sigall=`cat ${sfname} | grep "sum_signalall_total" | cut -d "=" -f2 | tail -1`; maxbagsz=`cat ${sfname} | grep "max_reclamation_event_size_total" | cut -d "=" -f2 | tail -1` ; maxunreclaimed=`cat ${sfname} | grep "num_unreclaimed" | cut -d "=" -f2 | tail -1`; printf "%15s %15d %12d %12d %12d %12d %12d\n" "$alg" "$n" "$tput" "$sigall" "$maxbagsz" "$maxunreclaimed" "$max_resmem" | tee templine.txt; cat templine.txt | paste -sd " " >> data_jax.csv; done; done ; echo "-------------------";done;



# Add header and comma to generated CSv file and then create a good format to do pivotting and charting manually from csv file: 

cat he_32k_mi_2000000_20upd_guerraoui_ext_bst_ticket_jax.csv | tr -s ' ' | sed 's/ /,/g; s/^,//' | (echo "alg,threads,tput,sigall,maxbagsz,maxunrec,peakmem"; cat) > he_dgt_20p.csv